version: '3.8'

services:
  # DBS

  mongo:
    image: mongo:7-jammy
    container_name: mongo
    volumes:
      - "./persistent-data/mongo-data:/data/db"
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 20s
      retries: 1
      start_period: 10s

  # Queues

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 3s
      retries: 1
      start_period: 10s

  # Backends
  tmdb:
    image: seppaleinen/worldinmovies_tmdb:latest
    expose:
      - 8020
    ports:
      - "127.0.0.1:8020:8020"
    environment:
      - TMDB_API=${TMDB_API}
      - SENTRY_API=${SENTRY_API_TMDB:-}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -k --fail http://localhost:8020/health" ]
      interval: 30s
      timeout: 2s
      retries: 1
      start_period: 15s

  # Frontend
  webapp:
    image: seppaleinen/worldinmovies_webapp
    depends_on:
      tmdb:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - REACT_APP_TMDB_URL=${REACT_APP_TMDB_URL:-}
      - REACT_APP_SENTRY_API=${SENTRY_API_WEB:-}
    healthcheck:
      test: ['CMD', 'nc', '-vz', '-w1', 'localhost', '443']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  certs:
  mongo_data:
