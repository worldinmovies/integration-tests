# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Integration Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: cypress/package-lock.json
    - name: Start containers
      run: |
        docker-compose -f "docker-compose.yml" up -d || docker-compose -f "docker-compose.yml" up -d
        docker cp datasubset/tmdb.movie.json mongo:/
        docker exec mongo mongoimport -d tmdb -c movie --mode upsert --file tmdb.movie.json
        docker cp datasubset/postgres* postgres:/
        docker exec postgres psql -U postgres -d postgres COPY listings FROM '/postgres.m.100.tsv' DELIMITER E'\t' CSV HEADER;
        docker exec postgres psql -U postgres -d postgres COPY listings FROM '/postgres.pcm.100.tsv' DELIMITER E'\t' CSV HEADER;
        npm --prefix cypress install
        npm --prefix cypress run cypress:test
      shell: bash
    - name: Check errors
      if: ${{ failure() }}
      run: docker compose logs && docker ps -a
    - name: Stop containers
      if: ${{ always() }}
      run: docker-compose -f "docker-compose.yml" down

