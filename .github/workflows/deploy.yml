name: Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      trigger:
        description: 'App to deploy, can be tmdb/webapp or an empty string, for deploying all'
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}

jobs:
  deploy:
    name: Setup wireguard connection, and deploy ${{ github.event.inputs.trigger }}
    runs-on: ubuntu-latest

    steps:
      - uses: seppaleinen/actions-ssh-wireguard@0.7-dev
        with:
          # Required: The SSH user to connect as.
          user: ${{ secrets.SSH_USER }}
          # Required: The SSH host to connect to.
          host: ${{ secrets.SSH_IP }}
          # Required: The SSH port to connect to.
          port: ${{ secrets.SSH_PORT }}
          # Required: The SSH private key to use for authentication.
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Required: The WireGuard configuration to use for the tunnel.
          conf: ${{ secrets.WIREGUARD_CONFIG }}
          # Required: The script to run on the remote host after the tunnel is established.
          script: "cd workspace/integration-tests && git pull && docker compose up -d --pull ${{ github.event.inputs.trigger }}"

      - name: Check errors
        if: ${{ failure() }}
        run: |
          cd workspace/integration-tests
          git status
          docker compose logs

      - name: Cleanup
        if: ${{ always() }}
        run: docker system prune -a
